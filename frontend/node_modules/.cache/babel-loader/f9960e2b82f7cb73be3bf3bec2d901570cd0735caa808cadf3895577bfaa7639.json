{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\OneDrive\\\\Desktop\\\\Personal\\\\golang_project\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\n/**\r\n * Main application component for the Task Manager.\r\n * This component manages the state of tasks and handles all CRUD operations.\r\n * It also provides the drag-and-drop context for task management.\r\n */\nimport React, { useState, useEffect } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport axios from 'axios';\nimport TaskColumn from './components/TaskColumn';\nimport TaskForm from './components/TaskForm';\nimport './App.css';\n\n/**\r\n * Interface defining the structure of a Task object\r\n * @interface Task\r\n * @property {string} id - Unique identifier for the task\r\n * @property {string} title - Title of the task\r\n * @property {string} description - Detailed description of the task\r\n * @property {'high' | 'medium' | 'low'} priority - Priority level of the task\r\n * @property {string} dueDate - Due date of the task in string format\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State to store all tasks\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch tasks when component mounts\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  /**\r\n   * Fetches all tasks from the backend API\r\n   * @async\r\n   * @function fetchTasks\r\n   * @returns {Promise<void>}\r\n   */\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/tasks');\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  /**\r\n   * Creates a new task and updates the state\r\n   * @async\r\n   * @function handleTaskCreate\r\n   * @param {Omit<Task, 'id'>} task - Task object without the id (will be generated by backend)\r\n   * @returns {Promise<void>}\r\n   */\n  const handleTaskCreate = async task => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/tasks', task);\n      setTasks([...tasks, response.data]);\n    } catch (error) {\n      console.error('Error creating task:', error);\n    }\n  };\n\n  /**\r\n   * Updates an existing task and updates the state\r\n   * @async\r\n   * @function handleTaskUpdate\r\n   * @param {Task} task - Updated task object\r\n   * @returns {Promise<void>}\r\n   */\n  const handleTaskUpdate = async task => {\n    try {\n      await axios.put(`http://localhost:8080/api/tasks/${task.id}`, task);\n      setTasks(tasks.map(t => t.id === task.id ? task : t));\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  /**\r\n   * Deletes a task and updates the state\r\n   * @async\r\n   * @function handleTaskDelete\r\n   * @param {string} id - ID of the task to delete\r\n   * @returns {Promise<void>}\r\n   */\n  const handleTaskDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/api/tasks/${id}`);\n      setTasks(tasks.filter(task => task.id !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n        onSubmit: handleTaskCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns\",\n        children: [/*#__PURE__*/_jsxDEV(TaskColumn, {\n          title: \"High Priority\",\n          tasks: tasks.filter(task => task.priority === 'high'),\n          onUpdate: handleTaskUpdate,\n          onDelete: handleTaskDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskColumn, {\n          title: \"Medium Priority\",\n          tasks: tasks.filter(task => task.priority === 'medium'),\n          onUpdate: handleTaskUpdate,\n          onDelete: handleTaskDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskColumn, {\n          title: \"Low Priority\",\n          tasks: tasks.filter(task => task.priority === 'low'),\n          onUpdate: handleTaskUpdate,\n          onDelete: handleTaskDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DndProvider","HTML5Backend","axios","TaskColumn","TaskForm","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","fetchTasks","response","get","data","error","console","handleTaskCreate","task","post","handleTaskUpdate","put","id","map","t","handleTaskDelete","delete","filter","backend","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","title","priority","onUpdate","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/ahmed/OneDrive/Desktop/Personal/golang_project/frontend/src/App.tsx"],"sourcesContent":["/**\r\n * Main application component for the Task Manager.\r\n * This component manages the state of tasks and handles all CRUD operations.\r\n * It also provides the drag-and-drop context for task management.\r\n */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport axios from 'axios';\r\nimport TaskColumn from './components/TaskColumn';\r\nimport TaskForm from './components/TaskForm';\r\nimport './App.css';\r\n\r\n/**\r\n * Interface defining the structure of a Task object\r\n * @interface Task\r\n * @property {string} id - Unique identifier for the task\r\n * @property {string} title - Title of the task\r\n * @property {string} description - Detailed description of the task\r\n * @property {'high' | 'medium' | 'low'} priority - Priority level of the task\r\n * @property {string} dueDate - Due date of the task in string format\r\n */\r\ninterface Task {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  priority: 'high' | 'medium' | 'low';\r\n  dueDate: string;\r\n}\r\n\r\nconst App: React.FC = () => {\r\n  // State to store all tasks\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n\r\n  // Fetch tasks when component mounts\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  /**\r\n   * Fetches all tasks from the backend API\r\n   * @async\r\n   * @function fetchTasks\r\n   * @returns {Promise<void>}\r\n   */\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await axios.get<Task[]>('http://localhost:8080/api/tasks');\r\n      setTasks(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Creates a new task and updates the state\r\n   * @async\r\n   * @function handleTaskCreate\r\n   * @param {Omit<Task, 'id'>} task - Task object without the id (will be generated by backend)\r\n   * @returns {Promise<void>}\r\n   */\r\n  const handleTaskCreate = async (task: Omit<Task, 'id'>) => {\r\n    try {\r\n      const response = await axios.post<Task>('http://localhost:8080/api/tasks', task);\r\n      setTasks([...tasks, response.data]);\r\n    } catch (error) {\r\n      console.error('Error creating task:', error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Updates an existing task and updates the state\r\n   * @async\r\n   * @function handleTaskUpdate\r\n   * @param {Task} task - Updated task object\r\n   * @returns {Promise<void>}\r\n   */\r\n  const handleTaskUpdate = async (task: Task) => {\r\n    try {\r\n      await axios.put(`http://localhost:8080/api/tasks/${task.id}`, task);\r\n      setTasks(tasks.map(t => t.id === task.id ? task : t));\r\n    } catch (error) {\r\n      console.error('Error updating task:', error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Deletes a task and updates the state\r\n   * @async\r\n   * @function handleTaskDelete\r\n   * @param {string} id - ID of the task to delete\r\n   * @returns {Promise<void>}\r\n   */\r\n  const handleTaskDelete = async (id: string) => {\r\n    try {\r\n      await axios.delete(`http://localhost:8080/api/tasks/${id}`);\r\n      setTasks(tasks.filter(task => task.id !== id));\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <div className=\"app\">\r\n        <h1>Task Manager</h1>\r\n        {/* Task creation form */}\r\n        <TaskForm onSubmit={handleTaskCreate} />\r\n        <div className=\"columns\">\r\n          {/* High priority tasks column */}\r\n          <TaskColumn\r\n            title=\"High Priority\"\r\n            tasks={tasks.filter(task => task.priority === 'high')}\r\n            onUpdate={handleTaskUpdate}\r\n            onDelete={handleTaskDelete}\r\n          />\r\n          {/* Medium priority tasks column */}\r\n          <TaskColumn\r\n            title=\"Medium Priority\"\r\n            tasks={tasks.filter(task => task.priority === 'medium')}\r\n            onUpdate={handleTaskUpdate}\r\n            onDelete={handleTaskDelete}\r\n          />\r\n          {/* Low priority tasks column */}\r\n          <TaskColumn\r\n            title=\"Low Priority\"\r\n            tasks={tasks.filter(task => task.priority === 'low')}\r\n            onUpdate={handleTaskUpdate}\r\n            onDelete={handleTaskDelete}\r\n          />\r\n        </div>\r\n      </div>\r\n    </DndProvider>\r\n  );\r\n};\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}