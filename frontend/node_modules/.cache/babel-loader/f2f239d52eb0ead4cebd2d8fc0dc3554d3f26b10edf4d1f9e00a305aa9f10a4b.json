{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\OneDrive\\\\Desktop\\\\Personal\\\\golang_project\\\\frontend\\\\src\\\\components\\\\TaskCard.tsx\",\n  _s = $RefreshSig$();\n/**\r\n * TaskCard component for displaying and managing individual tasks\r\n * Supports drag-and-drop functionality and inline editing\r\n */\nimport React, { useState } from 'react';\nimport { useDrag } from 'react-dnd';\n\n/**\r\n * Task interface defining the structure of a task\r\n * @interface Task\r\n */\n\n/**\r\n * Props interface for TaskCard component\r\n * @interface TaskCardProps\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\r\n * TaskCard functional component\r\n * @param {TaskCardProps} props - Component props\r\n * @returns {JSX.Element} Card displaying task information with edit/delete functionality\r\n */\nconst TaskCard = ({\n  task,\n  onUpdate,\n  onDelete\n}) => {\n  _s();\n  // State for managing edit mode and edited task data\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTask, setEditedTask] = useState(task);\n\n  // Drag and drop functionality using react-dnd\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: 'task',\n    item: task,\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n\n  /**\r\n   * Handles entering edit mode\r\n   */\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n\n  /**\r\n   * Handles saving edited task\r\n   */\n  const handleSave = () => {\n    onUpdate(editedTask);\n    setIsEditing(false);\n  };\n\n  /**\r\n   * Handles task deletion\r\n   */\n  const handleDelete = () => {\n    onDelete(task.id);\n  };\n  const handleCancel = () => {\n    setEditedTask(task);\n    setIsEditing(false);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedTask(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Render edit form when in editing mode\n  if (isEditing) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: drag,\n      className: `task-card ${isDragging ? 'dragging' : ''}`,\n      style: {\n        opacity: isDragging ? 0.5 : 1\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-edit\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: editedTask.title,\n          onChange: handleChange,\n          placeholder: \"Task title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"description\",\n          value: editedTask.description,\n          onChange: handleChange,\n          placeholder: \"Task description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"dueDate\",\n          value: editedTask.dueDate,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render task card in view mode\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drag,\n    className: `task-card ${isDragging ? 'dragging' : ''}`,\n    style: {\n      opacity: isDragging ? 0.5 : 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Due: \", new Date(task.dueDate).toLocaleDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCard, \"jQ1Il1d6/O5tZEc6SeFJs10j0GI=\", false, function () {\n  return [useDrag];\n});\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","useState","useDrag","jsxDEV","_jsxDEV","TaskCard","task","onUpdate","onDelete","_s","isEditing","setIsEditing","editedTask","setEditedTask","isDragging","drag","type","item","collect","monitor","handleEdit","handleSave","handleDelete","id","handleCancel","handleChange","e","name","value","target","prev","ref","className","style","opacity","children","title","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","description","dueDate","onClick","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/ahmed/OneDrive/Desktop/Personal/golang_project/frontend/src/components/TaskCard.tsx"],"sourcesContent":["/**\r\n * TaskCard component for displaying and managing individual tasks\r\n * Supports drag-and-drop functionality and inline editing\r\n */\r\nimport React, { useState } from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport type { DragSourceMonitor } from 'react-dnd';\r\n\r\n/**\r\n * Task interface defining the structure of a task\r\n * @interface Task\r\n */\r\ninterface Task {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  priority: 'high' | 'medium' | 'low';\r\n  dueDate: string;\r\n}\r\n\r\n/**\r\n * Props interface for TaskCard component\r\n * @interface TaskCardProps\r\n */\r\ninterface TaskCardProps {\r\n  task: Task;\r\n  onUpdate: (task: Task) => void;\r\n  onDelete: (id: string) => void;\r\n}\r\n\r\n/**\r\n * TaskCard functional component\r\n * @param {TaskCardProps} props - Component props\r\n * @returns {JSX.Element} Card displaying task information with edit/delete functionality\r\n */\r\nconst TaskCard: React.FC<TaskCardProps> = ({ task, onUpdate, onDelete }) => {\r\n  // State for managing edit mode and edited task data\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedTask, setEditedTask] = useState<Task>(task);\r\n\r\n  // Drag and drop functionality using react-dnd\r\n  const [{ isDragging }, drag] = useDrag(() => ({\r\n    type: 'task',\r\n    item: task,\r\n    collect: (monitor: DragSourceMonitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  }));\r\n\r\n  /**\r\n   * Handles entering edit mode\r\n   */\r\n  const handleEdit = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  /**\r\n   * Handles saving edited task\r\n   */\r\n  const handleSave = () => {\r\n    onUpdate(editedTask);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  /**\r\n   * Handles task deletion\r\n   */\r\n  const handleDelete = () => {\r\n    onDelete(task.id);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditedTask(task);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setEditedTask(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Render edit form when in editing mode\r\n  if (isEditing) {\r\n    return (\r\n      <div\r\n        ref={drag}\r\n        className={`task-card ${isDragging ? 'dragging' : ''}`}\r\n        style={{ opacity: isDragging ? 0.5 : 1 }}\r\n      >\r\n        <div className=\"task-edit\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={editedTask.title}\r\n            onChange={handleChange}\r\n            placeholder=\"Task title\"\r\n          />\r\n          <textarea\r\n            name=\"description\"\r\n            value={editedTask.description}\r\n            onChange={handleChange}\r\n            placeholder=\"Task description\"\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            name=\"dueDate\"\r\n            value={editedTask.dueDate}\r\n            onChange={handleChange}\r\n          />\r\n          <div className=\"task-actions\">\r\n            <button onClick={handleSave}>Save</button>\r\n            <button onClick={handleCancel}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Render task card in view mode\r\n  return (\r\n    <div\r\n      ref={drag}\r\n      className={`task-card ${isDragging ? 'dragging' : ''}`}\r\n      style={{ opacity: isDragging ? 0.5 : 1 }}\r\n    >\r\n      {/* Task title */}\r\n      <h3>{task.title}</h3>\r\n      {/* Task description */}\r\n      <p>{task.description}</p>\r\n      {/* Formatted due date */}\r\n      <p>Due: {new Date(task.dueDate).toLocaleDateString()}</p>\r\n      {/* Action buttons */}\r\n      <div className=\"task-actions\">\r\n        <button onClick={handleEdit}>Edit</button>\r\n        <button onClick={handleDelete}>Delete</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskCard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}