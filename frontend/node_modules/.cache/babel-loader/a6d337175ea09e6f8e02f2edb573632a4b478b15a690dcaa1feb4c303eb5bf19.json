{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\OneDrive\\\\Desktop\\\\Personal\\\\golang_project\\\\frontend\\\\src\\\\components\\\\TaskColumn.tsx\",\n  _s = $RefreshSig$();\n/**\r\n * TaskColumn component for displaying a column of tasks\r\n * Implements drop functionality for drag-and-drop operations\r\n */\nimport React from 'react';\nimport { useDrop } from 'react-dnd';\nimport TaskCard from './TaskCard';\n\n/**\r\n * Task interface defining the structure of a task\r\n * @interface Task\r\n */\n\n/**\r\n * Props interface for TaskColumn component\r\n * @interface TaskColumnProps\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\r\n * TaskColumn functional component\r\n * @param {TaskColumnProps} props - Component props\r\n * @returns {JSX.Element} Column displaying tasks of a specific priority\r\n */\nconst TaskColumn = ({\n  title,\n  tasks,\n  onUpdate,\n  onDelete\n}) => {\n  _s();\n  // Drop functionality using react-dnd\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: 'task',\n    // Handle task drop by updating its priority\n    drop: item => {\n      onUpdate({\n        ...item,\n        priority: title.toLowerCase().split(' ')[0]\n      });\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    className: `column ${isOver ? 'column-over' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n        task: task,\n        onUpdate: onUpdate,\n        onDelete: onDelete\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskColumn, \"9166pYLrZ/JzF75YDim8ZjfICTM=\", false, function () {\n  return [useDrop];\n});\n_c = TaskColumn;\nexport default TaskColumn;\nvar _c;\n$RefreshReg$(_c, \"TaskColumn\");","map":{"version":3,"names":["React","useDrop","TaskCard","jsxDEV","_jsxDEV","TaskColumn","title","tasks","onUpdate","onDelete","_s","isOver","drop","accept","item","priority","toLowerCase","split","collect","monitor","ref","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","id","_c","$RefreshReg$"],"sources":["C:/Users/ahmed/OneDrive/Desktop/Personal/golang_project/frontend/src/components/TaskColumn.tsx"],"sourcesContent":["/**\r\n * TaskColumn component for displaying a column of tasks\r\n * Implements drop functionality for drag-and-drop operations\r\n */\r\nimport React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport TaskCard from './TaskCard';\r\n\r\n/**\r\n * Task interface defining the structure of a task\r\n * @interface Task\r\n */\r\ninterface Task {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  priority: 'high' | 'medium' | 'low';\r\n  dueDate: string;\r\n}\r\n\r\n/**\r\n * Props interface for TaskColumn component\r\n * @interface TaskColumnProps\r\n */\r\ninterface TaskColumnProps {\r\n  title: string;\r\n  tasks: Task[];\r\n  onUpdate: (task: Task) => void;\r\n  onDelete: (id: string) => void;\r\n}\r\n\r\n/**\r\n * TaskColumn functional component\r\n * @param {TaskColumnProps} props - Component props\r\n * @returns {JSX.Element} Column displaying tasks of a specific priority\r\n */\r\nconst TaskColumn: React.FC<TaskColumnProps> = ({ title, tasks, onUpdate, onDelete }) => {\r\n  // Drop functionality using react-dnd\r\n  const [{ isOver }, drop] = useDrop(() => ({\r\n    accept: 'task',\r\n    // Handle task drop by updating its priority\r\n    drop: (item: Task) => {\r\n      onUpdate({ \r\n        ...item, \r\n        priority: title.toLowerCase().split(' ')[0] as 'high' | 'medium' | 'low' \r\n      });\r\n    },\r\n    collect: (monitor) => ({\r\n      isOver: !!monitor.isOver(),\r\n    }),\r\n  }));\r\n\r\n  return (\r\n    <div\r\n      ref={drop}\r\n      className={`column ${isOver ? 'column-over' : ''}`}\r\n    >\r\n      {/* Column title */}\r\n      <h2>{title}</h2>\r\n      {/* List of tasks in the column */}\r\n      <div className=\"tasks\">\r\n        {tasks.map((task) => (\r\n          <TaskCard\r\n            key={task.id}\r\n            task={task}\r\n            onUpdate={onUpdate}\r\n            onDelete={onDelete}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskColumn; "],"mappings":";;AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAOC,QAAQ,MAAM,YAAY;;AAEjC;AACA;AACA;AACA;;AASA;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAWA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAqC,GAAGA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtF;EACA,MAAM,CAAC;IAAEC;EAAO,CAAC,EAAEC,IAAI,CAAC,GAAGX,OAAO,CAAC,OAAO;IACxCY,MAAM,EAAE,MAAM;IACd;IACAD,IAAI,EAAGE,IAAU,IAAK;MACpBN,QAAQ,CAAC;QACP,GAAGM,IAAI;QACPC,QAAQ,EAAET,KAAK,CAACU,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;MAC5C,CAAC,CAAC;IACJ,CAAC;IACDC,OAAO,EAAGC,OAAO,KAAM;MACrBR,MAAM,EAAE,CAAC,CAACQ,OAAO,CAACR,MAAM,CAAC;IAC3B,CAAC;EACH,CAAC,CAAC,CAAC;EAEH,oBACEP,OAAA;IACEgB,GAAG,EAAER,IAAK;IACVS,SAAS,EAAE,UAAUV,MAAM,GAAG,aAAa,GAAG,EAAE,EAAG;IAAAW,QAAA,gBAGnDlB,OAAA;MAAAkB,QAAA,EAAKhB;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEhBtB,OAAA;MAAKiB,SAAS,EAAC,OAAO;MAAAC,QAAA,EACnBf,KAAK,CAACoB,GAAG,CAAEC,IAAI,iBACdxB,OAAA,CAACF,QAAQ;QAEP0B,IAAI,EAAEA,IAAK;QACXpB,QAAQ,EAAEA,QAAS;QACnBC,QAAQ,EAAEA;MAAS,GAHdmB,IAAI,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CApCIL,UAAqC;EAAA,QAEdJ,OAAO;AAAA;AAAA6B,EAAA,GAF9BzB,UAAqC;AAsC3C,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}